$date
  Mon Mar 12 16:34:04 2018
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 32 ! data00[31:0] $end
$var reg 32 " data01[31:0] $end
$var reg 32 # data10[31:0] $end
$var reg 32 $ data11[31:0] $end
$var reg 2 % sel[1:0] $end
$var reg 32 & output[31:0] $end
$scope module mux $end
$var reg 32 ' data00[31:0] $end
$var reg 32 ( data01[31:0] $end
$var reg 32 ) data10[31:0] $end
$var reg 32 * data11[31:0] $end
$var reg 2 + sel[1:0] $end
$var reg 32 , output[31:0] $end
$var reg 32 - opt0[31:0] $end
$var reg 32 . opt1[31:0] $end
$scope module muxa $end
$var reg 32 / data0[31:0] $end
$var reg 32 0 data1[31:0] $end
$var reg 1 1 sel $end
$var reg 32 2 output[31:0] $end
$upscope $end
$scope module muxb $end
$var reg 32 3 data0[31:0] $end
$var reg 32 4 data1[31:0] $end
$var reg 1 5 sel $end
$var reg 32 6 output[31:0] $end
$upscope $end
$scope module mux_out $end
$var reg 32 7 data0[31:0] $end
$var reg 32 8 data1[31:0] $end
$var reg 1 9 sel $end
$var reg 32 : output[31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000000000000000000000000000000 !
b00000000000000000000000000000000 "
b00000000000000000000000000000000 #
b00000000000000000000000000000000 $
b00 %
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
b00 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
01
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
05
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
09
b00000000000000000000000000000000 :
#1000000
b01001000000101010001011000100011 !
b10111010110111111010110011100000 "
b00010000000100000001000000010000 #
b11011110101011011011111011101111 $
b01001000000101010001011000100011 &
b01001000000101010001011000100011 '
b10111010110111111010110011100000 (
b00010000000100000001000000010000 )
b11011110101011011011111011101111 *
b01001000000101010001011000100011 ,
b01001000000101010001011000100011 -
b00010000000100000001000000010000 .
b01001000000101010001011000100011 /
b10111010110111111010110011100000 0
b01001000000101010001011000100011 2
b00010000000100000001000000010000 3
b11011110101011011011111011101111 4
b00010000000100000001000000010000 6
b01001000000101010001011000100011 7
b00010000000100000001000000010000 8
b01001000000101010001011000100011 :
#2000000
b01 %
b10111010110111111010110011100000 &
b01 +
b10111010110111111010110011100000 ,
b10111010110111111010110011100000 -
b11011110101011011011111011101111 .
11
b10111010110111111010110011100000 2
15
b11011110101011011011111011101111 6
b10111010110111111010110011100000 7
b11011110101011011011111011101111 8
b10111010110111111010110011100000 :
#3000000
b10 %
b00010000000100000001000000010000 &
b10 +
b00010000000100000001000000010000 ,
b01001000000101010001011000100011 -
b00010000000100000001000000010000 .
01
b01001000000101010001011000100011 2
05
b00010000000100000001000000010000 6
b01001000000101010001011000100011 7
b00010000000100000001000000010000 8
19
b00010000000100000001000000010000 :
#4000000
b11 %
b11011110101011011011111011101111 &
b11 +
b11011110101011011011111011101111 ,
b10111010110111111010110011100000 -
b11011110101011011011111011101111 .
11
b10111010110111111010110011100000 2
15
b11011110101011011011111011101111 6
b10111010110111111010110011100000 7
b11011110101011011011111011101111 8
b11011110101011011011111011101111 :
#5000000
#6000000
